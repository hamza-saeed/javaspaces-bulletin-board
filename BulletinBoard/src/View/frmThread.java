/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ThreadController;
import Model.OneTopic;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Thread Form
 *
 * @author Hamza Saeed - u1550400
 */
public class frmThread extends javax.swing.JFrame {

    ThreadController ThreadController;
    //model for message table
    DefaultTableModel messageModel;
    //topic selected by user to view
    OneTopic currentTopic;

    /**
     * Creates new form frmThread
     */
    public frmThread(ArrayList<OneTopic> topics, Integer post, ThreadController threadController) {
        initComponents();
        this.setAlwaysOnTop(true);
        //set window to middle of screen
        this.setLocationRelativeTo(null);
        //initialising controller variable
        ThreadController = threadController;
        messageModel = (DefaultTableModel) topicTable.getModel();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        //get the topic title, owner and time added from the arraylist and add the info to labels
        currentTopic = topics.get(post);
        lblTopic.setText("Topic: " + currentTopic.getTitle());
        lblUser.setText("Posted by: " + currentTopic.getOwner().getName());
        lblDate.setText("Posted on: " + dtf.format(currentTopic.getDateTimeAdded()));
        //call method to load subscription settings
        ThreadController.loadSubscriptionSettings(checkSubscribe, currentTopic);
        //call method to load all messages on current topic
        ThreadController.retrieveMessages(currentTopic, messageModel);
        //registers new messages for notifications and defines behaviour for when new message is added to current topic
        ThreadController.listenForMessagesAndNotify(messageModel, currentTopic);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblTopic = new java.awt.Label();
        lblUser = new java.awt.Label();
        lblDate = new java.awt.Label();
        TopicsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        topicTable = new javax.swing.JTable();
        txtComment = new javax.swing.JTextField();
        checkPrivate = new javax.swing.JCheckBox();
        btnAddMsg = new javax.swing.JButton();
        checkSubscribe = new javax.swing.JCheckBox();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(22, 160, 133));

        btnBack.setBackground(new java.awt.Color(22, 160, 133));
        btnBack.setText("‚Üê");
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(477, Short.MAX_VALUE))
        );

        back.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel3.setBackground(new java.awt.Color(22, 185, 136));

        lblTopic.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblTopic.setForeground(new java.awt.Color(255, 255, 255));
        lblTopic.setText("[Topic Name]");

        lblUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblUser.setForeground(new java.awt.Color(255, 255, 255));
        lblUser.setText("[User Name]");

        lblDate.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("[DateTime]");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        back.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, -1));

        topicTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comment", "User", "DateTime"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(topicTable);

        javax.swing.GroupLayout TopicsPanelLayout = new javax.swing.GroupLayout(TopicsPanel);
        TopicsPanel.setLayout(TopicsPanelLayout);
        TopicsPanelLayout.setHorizontalGroup(
            TopicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopicsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                .addContainerGap())
        );
        TopicsPanelLayout.setVerticalGroup(
            TopicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopicsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        back.add(TopicsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 726, 260));
        back.add(txtComment, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 430, -1));

        checkPrivate.setBackground(new java.awt.Color(255, 255, 255));
        checkPrivate.setText("Private Msg");
        checkPrivate.setToolTipText("Checking this will mean only the topic owner can see the message");
        back.add(checkPrivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, -1, -1));

        btnAddMsg.setText("Add Message");
        btnAddMsg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMsgMouseClicked(evt);
            }
        });
        back.add(btnAddMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, -1, 20));

        checkSubscribe.setBackground(new java.awt.Color(255, 255, 255));
        checkSubscribe.setText("Subscribe");
        checkSubscribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSubscribeActionPerformed(evt);
            }
        });
        back.add(checkSubscribe, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, -1, 30));

        btnUpdate.setText("Update Subscription");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        back.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 145, 190, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMsgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMsgMouseClicked
        String newMessage = txtComment.getText();

        if (ThreadController.doesTopicStillExist(currentTopic)) {
            if (ThreadController.verifyNewMessage(newMessage, currentTopic, checkPrivate)) {
                //reset textbox
                txtComment.setText("");
            }
        } else {
            //if thread does not exist anymore, notify user and close form
            JOptionPane.showMessageDialog(null, "Topic has been deleted", "Error", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }

    }//GEN-LAST:event_btnAddMsgMouseClicked

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        //dispose form instance
        this.dispose();
    }//GEN-LAST:event_btnBackMouseClicked

    private void checkSubscribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSubscribeActionPerformed

    }//GEN-LAST:event_checkSubscribeActionPerformed

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        //call method to update subscription
        ThreadController.updateSubscription(checkSubscribe, currentTopic);
        this.setAlwaysOnTop(false);
        JOptionPane.showMessageDialog(null, "Topic subscription has been updated");
        this.setAlwaysOnTop(true);

    }//GEN-LAST:event_btnUpdateMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TopicsPanel;
    private javax.swing.JPanel back;
    private javax.swing.JButton btnAddMsg;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox checkPrivate;
    private javax.swing.JCheckBox checkSubscribe;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label lblDate;
    private java.awt.Label lblTopic;
    private java.awt.Label lblUser;
    private javax.swing.JTable topicTable;
    private javax.swing.JTextField txtComment;
    // End of variables declaration//GEN-END:variables
}
